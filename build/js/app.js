GoToTrip=function(){var t=this,e=$(document.body),i=$(document),s=$(window),n={top:!1,left:!1},o=$("#gt-is-360"),a=($("#gt-is-480"),$("#gt-is-667")),r=$("#gt-is-768"),c=$("#gt-is-1024"),l=($("#gt-is-1231"),$("header")),d=$("footer"),g=$("#gt-wrapper"),u=$("#gt-up"),h=$("#gt-mobile-menu-switch"),f=$(".gt-enter"),p=$("#gt-header-enter-wrapper"),v=$("#gt-header-enter"),m=$("#gt-header-enter-chose"),C=$("#gt-header-enter-close");$("html").niceScroll({cursorborder:"1px solid #6d6d6d",mousescrollstep:"60",bouncescroll:!0,cursorcolor:"#6d6d6d"}),this.fixBody=function(){n.top||n.left||(n.top=i.scrollTop(),n.left=e.offset().left,e.css({position:"fixed",left:n.left+"px",top:-1*n.top+"px"}))},this.unfixBody=function(){e.css({position:"",left:"",top:""}),i.scrollTop(n.top),n.top=!1,n.left=!1},this.footerHeight=function(){d.outerHeight()>s.height()-50?(d.css("position","static"),g.css("margin-bottom",""),u.css("position","static")):(d.css("position",""),u.css("position",""),g.css("margin-bottom",d.outerHeight()+"px"))},this.deskTopMenuScroll=function(){s.scrollTop()>l.outerHeight()?l.addClass("gt-header-scrolled"):l.removeClass("gt-header-scrolled")},$("*").is(".gt-top-plane")&&$(".gt-header").addClass("gt-header-plane-top"),this.mobileMenuClose=function(){t.unfixBody(),h.removeClass("gt-open"),l.removeClass("gt-open")},this.mobileMenuOpen=function(){t.fixBody(),l.addClass("gt-open"),h.addClass("gt-open")},h.on("click",function(){$(this).hasClass("gt-open")?t.mobileMenuClose():t.mobileMenuOpen()}),this.openEnterForm=function(){p.addClass("gt-open"),setTimeout(function(){$("#gt-header-registered").addClass("gt-open"),v.addClass("gt-open"),C.addClass("gt-open")})},this.closeEnterForm=function(){C.removeClass("gt-open"),v.removeClass("gt-open"),$("#gt-header-registered").removeClass("gt-open"),t.closeRestorePass(),setTimeout(function(){p.removeClass("gt-open")},750)},this.changeEnterRegistration=function(t){v.hasClass($(t.target).attr("class"))||v.removeClass("gt-chosen-enter").removeClass("gt-chosen-registration").addClass($(t.target).attr("class"))},this.openRestorePass=function(){$("#gt-enter-pass-restore-wrapper").addClass("gt-open")},this.closeRestorePass=function(){$("#gt-enter-pass-restore-wrapper").removeClass("gt-open")},f.each(function(){$(this).on("click",t.openEnterForm)}),C.on("click",t.closeEnterForm),m.on("click",function(e){t.changeEnterRegistration(e)}),$("#gt-enter-form-restore-pass").on("click",t.openRestorePass),$("#gt-enter-pass-restore-submit").on("click",t.closeRestorePass),this.setBackground=function(){$(".gt-img-holder").each(function(){if($(this).attr("data-bg")){var t=$(this).attr("data-bg");a.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/phone/'+t+'")'):c.is(":visible")?$(this).css("background-image",'url("./img/backgrounds/tablet/'+t+'")'):$(this).css("background-image",'url("./img/backgrounds/desktop/'+t+'")')}})},this.imgHolderFunc=function(t){$(t).removeClass("gt-width"),$(t).removeClass("gt-height"),$(t).removeClass("gt-visible");var e=t.outerHeight()/t.outerWidth(),i=t.find("img");i.outerHeight()/i.outerWidth()>e?$(t).addClass("gt-width"):$(t).addClass("gt-height"),$(t).addClass("gt-visible")},$("div").is(".gt-img-holder")&&t.setBackground(),this.createSlider=function(e,i){function n(){if(S>w){var t="";M&&(t='<div class="gt-slider-arrow-num"><i class="gt-slider-num-curr"></i><i>из</i><i class="gt-slider-num-max"></i></div>'),e.find(".gt-slider-arrow-holder").html('<span class = "gt-slider-arrow left"></span>'+t+'<span class = "gt-slider-arrow right"></span>'),e.find(".left").on("click",function(){l(!1)}),e.find(".right").on("click",function(){l(!0)}),M&&u(),u()}b=!0}function c(t){var i=t||e;i.find(".left").off(),i.find(".right").off(),i.find(".gt-slider-arrow-holder").html(""),b=!1}function l(i,s){var n,o;if(s||0===s?T=s:i?T++:T--,E&&(T>S-w&&(T=0),T<0&&(T=S-w),g()),H&&(T>S-w&&(n=x.children().first().clone(),o=x.children().first(),e.hasClass("gt-view-cards-slider")&&(t.destroyViewCardListeners(o),t.createViewCardListeners(n)),x.css("left",-(T-2)*C+"px"),x.append(n),o.remove(),T--),T<0?(n=x.children().last(),o=x.children().last(),e.hasClass("gt-view-cards-slider")&&(t.destroyViewCardListeners(o),t.createViewCardListeners(n)),x.css("left",-(T+2)*C+"px"),x.prepend(n.clone()),o.remove(),T++,d()):d()),M&&u(),V){var a=e.find(".gt-slider-nav span");a.removeClass("gt-active"),$(a[x.find(".gt-open").attr("data-count")]).addClass("gt-active")}}function d(){x.children().removeClass("gt-open"),x.animate({left:-T*C},P),x.children().eq(T).addClass("gt-open")}function g(t){var e=t||T;$(k).removeClass("gt-open"),$(k[e]).addClass("gt-open")}function u(){e.find(".gt-slider-num-curr").text(+x.find(".gt-open").attr("data-count")+1),e.find(".gt-slider-num-max").text(S)}function h(){var t=0,i=0;e.on("touchstart",function(e){var i=e.originalEvent;t=Math.abs(i.touches[0].pageX),console.log("touchstart")}),e.on("touchend",function(e){var s=e.originalEvent;i=Math.abs(s.changedTouches[0].pageX),Math.abs(t-i)>50&&l(t>i?!0:!1)})}function f(t){(t||e).off()}function p(){e.attr("data-count")&&(w=parseInt(e.attr("data-count")),$(r).is(":visible")&&(w=3),$(a).is(":visible")&&(w=2),$(o).is(":visible")&&(w=1))}function v(){C=e.outerWidth()/w,e.find(".gt-slider-container").outerWidth((S+1)*C),k.each(function(){$(this).outerWidth(C),$(this).attr("data-count",$(this).index())})}var m,C,w=1,b=!1,k=e.find(".gt-slider-inner"),x=e.find(".gt-slider-container"),S=k.length,T=i||0,y=e.hasClass("gt-slider-has-arrow"),V=e.hasClass("gt-slider-has-dots"),M=e.hasClass("gt-slider-num"),H=e.hasClass("gt-slider-tram"),P=+e.attr("data-duration")||300,E=e.hasClass("gt-slider-fade"),A=e.hasClass("gt-slider-has-clone");E&&g(i),H&&(p(),v(),d()),y&&(e.append('<div class="gt-slider-arrow-holder"></div>'),n()),V&&function(){e.append('<div class="gt-slider-nav"></div>');for(var t=e.find(".gt-slider-nav"),i="",s=0;s<S;s++)i+="<span data-num = "+s+"></span>";t.html(i),t.find("span").first().addClass("gt-active"),e.find(".gt-slider-nav span").on("click",function(){l(!0,+$(this).attr("data-num"))})}(),S>w&&h(),A&&e.find(".gt-slider-inner-cover").each(function(){$(this).on("click",function(){!function(i){if(!$("div").is("#gt-clone")){t.fixBody();var s=$("#gt-body-wrapper");s.append('<div id = "gt-clone-wrapper"   class="container"><div id = "gt-clone" class="gt-slider gt-slider-clone gt-slider-fade gt-slider-num  gt-slider-has-arrow"><div id = "gt-clone-close" class = "gt-slider-clone-close"></div><div  id = "gt-clone-container" class="gt-slider-container"></div></div></div>'),s.show();var n=$("#gt-clone");e.find(".gt-slider-inner").clone(!0).each(function(){$(this).outerWidth(""),$("#gt-clone-container").append($(this))}),t.createSlider(n,i),$("#gt-clone-close").on("click",function(){!function(e){c(e),f(e),$("#gt-clone-close").off(),$("#gt-clone-wrapper").remove(),$("#gt-body-wrapper").hide(),t.unfixBody()}(n)})}}($(this).parent().index())})}),s.resize(function(){m||(m=setTimeout(function(){m=null,f(),H&&(p(),v(),T>S-w&&(T=S-w),S<=w&&(T=0),d()),b&&(c(),n()),S>w&&h()},132))})},$("div").is(".gt-slider")&&$(".gt-slider").each(function(){t.createSlider($(this))}),this.numberCollectionArticle=function(t){t.find(".gt-collection-link-wrapper").each(function(){$(this).find(".gt-collection-link-slider-wrapper").after('<div class = "gt-collection-link-number"><span>'+($(this).index()+1)+"</span></div>")})},$("div").is(".gt-collection-wrapper-num")&&$(".gt-collection-wrapper-num").each(function(){t.numberCollectionArticle($(this))}),this.manageGtActiveUlMenu=function(t){"li"!=t.tagName&&(t=$(t).closest("li")),$(t).closest($("ul")).find("li").removeClass("gt-active"),$(t).addClass("gt-active")},$("*").is(".gt-button-menu")&&$(".gt-button-menu").on("click",function(e){e.preventDefault(),t.manageGtActiveUlMenu(e.target)}),$("*").is(".gt-menu-news_items")&&$(".gt-menu-news_items").on("click",function(e){e.preventDefault(),t.manageGtActiveUlMenu(e.target)}),this.setPlayers=function(){var e=document.createElement("script");e.type="text/javascript",e.src="https://www.youtube.com/player_api";var i=$("script")[$("script").length-1];i.parentNode.insertBefore(e,i);$(".gt-video").each(function(){var e=$(this);e.find(".gt-video-switch").on("click",function(){$(this).addClass("gt-open"),e.addClass("gt-open"),t.addYouTube(e)})})},this.addYouTube=function(t){function e(){s.mute(),s.playVideo(),t.addClass("gt-video-on"),t.find(".gt-video-uncover").on("click",i),t.find(".gt-video-pause").on("click",function(){s.pauseVideo()}),t.find(".gt-video-play").on("click",function(){s.playVideo()})}function i(){console.log("playFullScreen");var e=t.find("iframe")[0],i=e.requestFullScreen||e.mozRequestFullScreen||e.webkitRequestFullScreen;i&&i.bind(e)()}var s,n="gt-video-"+t.index();t.find(".gt-video-switch").hide("slow"),t.find(".gt-video-inner").attr("id",n).addClass("gt-video-foreground"),s=new YT.Player(n,{width:600,height:400,videoId:t.attr("data-youtube"),playerVars:{playlist:t.attr("data-youtube"),color:"white",loop:1,autoplay:1},events:{onReady:e}})},$("div").is(".gt-video")&&t.setPlayers(),this.fixArticleScrollTablePosition=function(t){var e=t,s=e.parent(),n=e.outerHeight(),o=s.position().top,a=o+s.outerHeight(),r=e.outerWidth(),c=i.scrollTop();o+90>c&&e.hasClass("gt-fixed")&&(e.removeClass("gt-fixed"),e.css({left:"",width:""})),o<c+90&&(e.hasClass("gt-fixed")||(e.css({left:e.offset().left+"px",width:r}),e.addClass("gt-fixed")),c-a+n+90>=0?e.addClass("gt-fixed-bottom"):e.removeClass("gt-fixed-bottom"))},this.createArticteScrollTable=function(){if($("div").is(".gt-article")){var e=$(".gt-article"),i=$("#gt-article-scroll-table"),s="";e.each(function(){s+='<div class = "gt-article-scroll"   data-href= "'+$(this).attr("id")+'" ><div class = "gt-article-scroll-shadow"></div><p>'+$(this).find("h2").text()+"</p></div>"}),i.html(s),i.find(".gt-article-scroll").each(function(){$(this).on("click",function(){t.scrollToArticle($(this).attr("data-href"))})})}},this.scrollToArticle=function(t){$("html").animate({scrollTop:$("#"+t).offset().top-110},1100)},this.showArtidleShadow=function(){$(".gt-article").each(function(){var t=$(this).position().top,e=$(this).outerHeight(),i=$(document).scrollTop(),s=0;(s=t>i?0:(i-t)/e)>1&&(s=1);var n=$(".gt-article-scroll")[$(this).index()];$(n).find(".gt-article-scroll-shadow").css("width",100*s+"%")})},$("div").is(".gt-article-table-wrapper")&&$(".gt-article-table-wrapper").each(function(){function e(){r&&(n||(n=setTimeout(function(){n=null,t.fixArticleScrollTablePosition(o),a&&t.showArtidleShadow()})))}function i(){o.outerHeight()>o.parent().outerHeight()?(r=!1,o.css({position:"relative",right:"15px"})):(r=!0,o.css({position:"",right:""}))}var n,o=$(this),a=!1,r=!0;$("div").is(".gt-article-scroll-table")&&(a=!0,t.createArticteScrollTable(),t.showArtidleShadow()),i(),s.scroll(e),s.resize(function(){i(),e()})}),this.setCurrTime=function(){t.currTime();setInterval(t.currTime,3e4)},this.currTime=function(){$(".gt-curr-time").each(function(){var t=new Date;$(this).attr("data-gmt")&&t.setUTCHours(+$(this).attr("data-gmt"));var e=t.getHours(),i=t.getMinutes(),s=t.getDay(),n=t.getDate(),o=t.getMonth(),a=t.getFullYear();e<10&&(e="0"+e),i<10&&(i="0"+i),s=["Воскресенье","Понедельник","Вторник","Среда","Четверг","Пятница","Суббота"][s],o=["января","февраля","марта","апреля","мая","июня","июля","августа","сентября","октября","ноября","декабря"][o],$(".gt-curr-time-time")&&$(".gt-curr-time-time").html(e+":"+i),$(".gt-curr-time-date")&&$(".gt-curr-time-date").html(s+", "+n+" "+o+" "+a)})},$("div").is(".gt-curr-time")&&t.setCurrTime(),$("div").is(".gt-inner-scroll")&&$(".gt-inner-scroll").each(function(){$(this).niceScroll({cursoropacitymin:"1",cursoropacitymax:"1",cursorwidth:"2px",cursorborder:"none",mousescrollstep:"60",background:"#CECECE",railoffset:"left",zindex:"auto",cursorcolor:"#CECECE"})}),this.tabSlider=function(){$(".gt-tabs").each(function(){var e=$(this);e.find(".gt-tabs-button").each(function(){$(this).on("click",function(){t.tabSliderAction(e,$(this).index())})}),t.tabSliderAction(e,0,!0)})},this.tabSliderAction=function(t,e,i){var s=$(t.find(".gt-tabs-button")),n=$(t.find(".gt-tabs-main"));t.find(".gt-inner-scroll-tab").each(function(){$("#"+$(this).attr("data-scroll")).hide()}),s.removeClass("active"),n.removeClass("active"),$(s[e]).addClass("active"),$(n[e]).addClass("active"),(0!=$("#"+$(n[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).find(".gt-scroll-cursor").height()||i)&&$("#"+$(n[e]).find(".gt-inner-scroll-tab").attr("data-scroll")).show()},$("div").is(".gt-tabs")&&t.tabSlider(),this.columnPartnership=function(){$("#gt-partnership").addClass("gt-partnership-column")},this.rowPartnership=function(){$("#gt-partnership").removeClass("gt-partnership-column")},$("*").is("#gt-partnership")&&($("#gt-partnership-row").on("click",t.rowPartnership),$("#gt-partnership-column").on("click",t.columnPartnership)),this.createViewCardListeners=function(e){e.find(".gt-view-cards-icons-visit").on("click",function(i){t.closeShareViewCard(e),i.stopPropagation(),t.clickVisitViewCard(e)}),e.find(".gt-view-cards-icons-pin-plus").on("click",function(i){t.closeShareViewCard(e),i.stopPropagation(),t.clickSeenViewCard(e)}),e.find(".gt-view-cards-icons-bookmarks").on("click",function(i){t.closeShareViewCard(e),i.stopPropagation(),t.clickMarkViewCard(e)}),e.find(".gt-view-cards-icons-share").on("click",function(i){event.stopPropagation(),t.clickShareViewCard(e)}),e.find(".gt-view-cards-icons-share").find("a").on("click",function(e,i){e.preventDefault(),t.viewCardSocial(i)}),e.on("click  mouseleave",function(){$(e).find(".gt-view-cards-icons-share").parent().removeClass("gt-active"),t.closeShareViewCard(e)})},this.destroyViewCardListeners=function(t){t.find(".gt-view-cards-icons-visit").off(),t.find(".gt-view-cards-icons-pin-plus").off(),t.find(".gt-view-cards-icons-bookmarks").off(),t.find(".gt-view-cards-icons-share").off(),t.find(".gt-view-cards-icons-share").find("a").off(),t.off()},this.viewCardSocial=function(e){console.log("click social"),t.closeShareViewCard(e)},this.openShareViewCard=function(t){$(t).addClass("gt-active")},this.closeShareViewCard=function(t){$(t).removeClass("gt-active")},this.clickShareViewCard=function(e){var i=e.find(".gt-view-cards-icons-share").parent();i.hasClass("gt-active")?(i.removeClass("gt-active"),t.closeShareViewCard(e)):(i.addClass("gt-active"),t.openShareViewCard(e))},this.clickVisitViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-visit").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not visited now")):(e.addClass("gt-active"),console.log("click visit"))}},this.clickSeenViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-pin-plus").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click not seen now")):(e.addClass("gt-active"),console.log("click seen"))}},this.clickMarkViewCard=function(t){if(!t.hasClass("gt-active")){var e=t.find(".gt-view-cards-icons-bookmarks").parent();e.hasClass("gt-active")?(e.removeClass("gt-active"),console.log("click delete bookmark")):(e.addClass("gt-active"),console.log("click add bookmark"))}},$("*").is(".gt-view-cards-inner")&&$(".gt-view-cards-inner").each(function(){t.createViewCardListeners($(this))}),$("#gt-enter-form-facebook").on("click",function(){t.socialEnter("facebook")}),$("#gt-enter-form-twitter").on("click",function(){t.socialEnter("twitter")}),$("#gt-enter-form-google").on("click",function(){t.socialEnter("google")}),$("#gt-reg-form-facebook").on("click",function(){t.socialRegistration("facebook")}),$("#gt-reg-form-twitter").on("click",function(){t.socialRegistration("twitter")}),$("#gt-reg-form-google").on("click",function(){t.socialRegistration("google")}),this.socialRegistration=function(t){alert("Регистрация через "+t)},this.socialEnter=function(t){alert("Вход через "+t)},this.cutNews=function(t){var e,i,s,n=t.parent(),o=n.height(),a=t.find("p");n.children().each(function(){o-=$(this).outerHeight(!0)}),o=o+t.height()-20,a.each(function(){(e=$(this).outerHeight(!0))<o?o-=e:o?(i=Math.floor($(this).text().length*o/e),s=$(this).text().substring(0,i-5),$(this).text(s+"..."),o=0):$(this).css("display","none")})},$("div").is(".js-news-cut")&&($(".js-news-cut").each(function(){t.cutNews($(this))}),s.resize(function(){$(".js-news-cut").each(function(){t.cutNews($(this))})})),this.cutReadMoreSlider=function(){$(".gt-read-more-slider-text-inner").each(function(){t.cutting($(this),160)})},this.cutting=function(t,e){var i=t.text();i.length>e&&(i=i.slice(0,e)+"...",t.text(i))},$("p").is(".gt-read-more-slider-text-inner")&&t.cutReadMoreSlider(),i.ready(function(){t.footerHeight(),t.deskTopMenuScroll()}),this.pageUp=function(){return $("html, body").animate({scrollTop:0},800),!1},this.upPageButton=function(){$(document).scrollTop()>30?u.addClass("gt-visible"):u.removeClass("gt-visible")},u.on("click",t.pageUp),s.scroll(function(){t.upPageButton(),$(".gt-header-menu").is(":visible")&&t.deskTopMenuScroll()}),s.resize(function(){t.deskTopMenuScroll(),t.footerHeight(),l.hasClass("gt-open")&&t.mobileMenuClose(),$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){$(this).removeClass("gt-width"),$(this).removeClass("gt-height"),t.imgHolderFunc($(this))})}),$(window).on("load",function(){$("div").is(".gt-img-holder-abs")&&$(".gt-img-holder-abs").each(function(){t.imgHolderFunc($(this))})}),e.on("click",function(t){}),$("*").is(".gt-menu-news")&&$(".gt-menu-news").find("a").on("click",function(t){t.preventDefault(),$(".gt-menu-news").find("li").removeClass("gt-active"),$(this).parent().addClass("gt-active"),console.log("temp func")})},$(document).ready(function(){new GoToTrip});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
